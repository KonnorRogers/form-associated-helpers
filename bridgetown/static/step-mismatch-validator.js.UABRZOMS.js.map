{
  "version": 3,
  "sources": ["../../../../exports/validators/step-mismatch-validator.js"],
  "sourcesContent": ["/**\n * @param {number} min\n * @param {number} value\n * @param {number} step\n * @return {boolean}\n */\nfunction isValidStep (min, value, step) {\n  return (value - min) % step === 0\n}\n\n/**\n * @param {number} min\n * @param {number} value\n * @param {number} step\n * @returns {{ high: number, low: number }}\n */\nfunction findClosestSteps (min, value, step) {\n  const high = value + ((value - min) % step)\n  const low = high - step\n\n  return { high, low }\n}\n\n/**\n * @type {() => import(\"../types.js\").Validator<HTMLElement & { min?: number, step?: number }> & { message: (element: HTMLElement, options: { low: number, high: number }) => string }}\n */\nexport const StepMismatchValidator = () => {\n  /**\n   * @type {ReturnType<StepMismatchValidator>}\n   */\n  const obj = {\n    observedAttributes: [\"min\", \"step\"],\n    message (_element, { low, high }) {\n      return `Please select a valid value. The two nearest valid values are ${low} and ${high}.`\n    },\n    checkValidity (element) {\n      const min = Number(element.min ?? element.getAttribute(\"min\"))\n      const value = Number(element.value ?? element.getAttribute(\"value\"))\n      const step = Number(element.step ?? element.getAttribute(\"step\"))\n\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      if (isNaN(min) || isNaN(value) || isNaN(step)) {\n        return validity\n      }\n\n      const isValid = isValidStep(min, value, step)\n\n      if (isValid) return validity\n\n      const {low, high} = findClosestSteps(min, value, step)\n\n      validity.message = (typeof obj.message === \"function\" ? obj.message(element, { low, high }) : obj.message) || \"\"\n      validity.isValid = false\n      validity.invalidKeys.push(\"stepMismatch\")\n\n      return validity\n    }\n  }\n\n  return obj\n}\n"],
  "mappings": "4EAMA,SAASA,EAAaC,EAAKC,EAAOC,EAAM,CACtC,OAAQD,EAAQD,GAAOE,IAAS,CAClC,CAQA,SAASC,EAAkBH,EAAKC,EAAOC,EAAM,CAC3C,IAAME,EAAOH,GAAUA,EAAQD,GAAOE,EAChCG,EAAMD,EAAOF,EAEnB,MAAO,CAAE,KAAAE,EAAM,IAAAC,CAAI,CACrB,CAKO,IAAMC,EAAwB,IAAM,CAIzC,IAAMC,EAAM,CACV,mBAAoB,CAAC,MAAO,MAAM,EAClC,QAASC,EAAU,CAAE,IAAAH,EAAK,KAAAD,CAAK,EAAG,CAChC,MAAO,iEAAiEC,CAAG,QAAQD,CAAI,GACzF,EACA,cAAeK,EAAS,CACtB,IAAMT,EAAM,OAAOS,EAAQ,KAAOA,EAAQ,aAAa,KAAK,CAAC,EACvDR,EAAQ,OAAOQ,EAAQ,OAASA,EAAQ,aAAa,OAAO,CAAC,EAC7DP,EAAO,OAAOO,EAAQ,MAAQA,EAAQ,aAAa,MAAM,CAAC,EAK1DC,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAQA,GANI,MAAMV,CAAG,GAAK,MAAMC,CAAK,GAAK,MAAMC,CAAI,GAI5BH,EAAYC,EAAKC,EAAOC,CAAI,EAE/B,OAAOQ,EAEpB,GAAM,CAAC,IAAAL,EAAK,KAAAD,CAAI,EAAID,EAAiBH,EAAKC,EAAOC,CAAI,EAErD,OAAAQ,EAAS,SAAW,OAAOH,EAAI,SAAY,WAAaA,EAAI,QAAQE,EAAS,CAAE,IAAAJ,EAAK,KAAAD,CAAK,CAAC,EAAIG,EAAI,UAAY,GAC9GG,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,cAAc,EAEjCA,CACT,CACF,EAEA,OAAOH,CACT",
  "names": ["isValidStep", "min", "value", "step", "findClosestSteps", "high", "low", "StepMismatchValidator", "obj", "_element", "element", "validity"]
}
