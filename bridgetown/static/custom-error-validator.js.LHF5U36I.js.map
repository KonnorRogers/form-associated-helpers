{
  "version": 3,
  "sources": ["../../../../exports/validators/custom-error-validator.js"],
  "sourcesContent": ["/**\n * A validator for custom errors. This will check if there is an `.customError` property or an `custom-error` attribute\n *   and append it to the ValidityState of the custom element.\n * @template {HTMLElement & { customError?: string | boolean }} T\n * @returns {import(\"../types.js\").Validator<T> & { fallbackMessage: ((element: T) => string) | string }}\n */\nexport const CustomErrorValidator = () => {\n  /**\n   * @type {ReturnType<CustomErrorValidator<T>>}\n   */\n const obj = {\n    observedAttributes: [\"custom-error\"],\n    fallbackMessage: \"An error occurred\",\n   /**\n    * @param {T} element\n    */\n    message (element) {\n      let errorMsg = element.customError ?? element.getAttribute(\"custom-error\")\n\n      if (!errorMsg || errorMsg === true) {\n        errorMsg = typeof obj.fallbackMessage === \"function\" ? obj.fallbackMessage(element) : obj.fallbackMessage\n      }\n\n      return errorMsg\n    },\n    checkValidity (element) {\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      if (Boolean(element.customError) || element.hasAttribute(\"custom-error\")) {\n        validity.invalidKeys.push(\"customError\")\n        validity.isValid = false\n        const fallbackMessage = () => typeof obj.fallbackMessage === \"function\" ? obj.fallbackMessage(element) : obj.fallbackMessage\n\n        validity.message = (typeof obj.message === \"function\" ? obj.message(element) : obj.message) || fallbackMessage()\n        return validity\n      }\n\n      return validity\n    }\n  }\n  return obj\n}\n\n"],
  "mappings": "4EAMO,IAAMA,EAAuB,IAAM,CAIzC,IAAMC,EAAM,CACT,mBAAoB,CAAC,cAAc,EACnC,gBAAiB,oBAIjB,QAASC,EAAS,CAChB,IAAIC,EAAWD,EAAQ,aAAeA,EAAQ,aAAa,cAAc,EAEzE,OAAI,CAACC,GAAYA,IAAa,MAC5BA,EAAW,OAAOF,EAAI,iBAAoB,WAAaA,EAAI,gBAAgBC,CAAO,EAAID,EAAI,iBAGrFE,CACT,EACA,cAAeD,EAAS,CAItB,IAAME,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAEA,GAAYF,EAAQ,aAAgBA,EAAQ,aAAa,cAAc,EAAG,CACxEE,EAAS,YAAY,KAAK,aAAa,EACvCA,EAAS,QAAU,GACnB,IAAMC,EAAkB,IAAM,OAAOJ,EAAI,iBAAoB,WAAaA,EAAI,gBAAgBC,CAAO,EAAID,EAAI,gBAE7G,OAAAG,EAAS,SAAW,OAAOH,EAAI,SAAY,WAAaA,EAAI,QAAQC,CAAO,EAAID,EAAI,UAAYI,EAAgB,EACxGD,CACT,CAEA,OAAOA,CACT,CACF,EACA,OAAOH,CACT",
  "names": ["CustomErrorValidator", "obj", "element", "errorMsg", "validity", "fallbackMessage"]
}
