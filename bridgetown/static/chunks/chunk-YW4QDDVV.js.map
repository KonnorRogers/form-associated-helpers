{
  "version": 3,
  "sources": ["../../../../../exports/validators/too-long-validator.js"],
  "sourcesContent": ["/**\n * @type {() => import(\"../types.js\").Validator<HTMLElement & { maxLength?: number, length?: number }> & {message: (element: HTMLElement, maxLength: number, stringLength: number) => string}}\n */\nexport const TooLongValidator = () => {\n  /**\n   * @type {ReturnType<TooLongValidator>}\n   */\n  const obj = {\n    observedAttributes: [\"maxlength\"],\n    message (_element, maxLength, stringLength) {\n      return `Please use less than or equal to ${maxLength} characters. You are currently using ${stringLength} characters.`\n    },\n    checkValidity (element) {\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      /** if its not a string, we really can't compare. */\n      let value = element.value ?? \"\"\n      if (typeof value !== \"string\") { return validity }\n\n      const maxLength = Number(element.maxLength || element.getAttribute(\"maxlength\"))\n\n      if (!maxLength) { return validity }\n\n      if (maxLength > value.length) {\n        validity.message = (typeof obj.message === \"function\" ? obj.message(element, maxLength, value.length) : obj.message) || \"\"\n        validity.isValid = false\n        validity.invalidKeys.push(\"tooLong\")\n      }\n\n      return validity;\n    }\n  }\n\n  return obj\n}\n\n"],
  "mappings": "AAGO,IAAMA,EAAmB,IAAM,CAIpC,IAAMC,EAAM,CACV,mBAAoB,CAAC,WAAW,EAChC,QAASC,EAAUC,EAAWC,EAAc,CAC1C,MAAO,oCAAoCD,CAAS,wCAAwCC,CAAY,cAC1G,EACA,cAAeC,EAAS,CAItB,IAAMC,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAGIC,EAAQF,EAAQ,OAAS,GAC7B,GAAI,OAAOE,GAAU,SAAY,OAAOD,EAExC,IAAMH,EAAY,OAAOE,EAAQ,WAAaA,EAAQ,aAAa,WAAW,CAAC,EAE/E,OAAKF,GAEDA,EAAYI,EAAM,SACpBD,EAAS,SAAW,OAAOL,EAAI,SAAY,WAAaA,EAAI,QAAQI,EAASF,EAAWI,EAAM,MAAM,EAAIN,EAAI,UAAY,GACxHK,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,SAAS,GAG9BA,CACT,CACF,EAEA,OAAOL,CACT",
  "names": ["TooLongValidator", "obj", "_element", "maxLength", "stringLength", "element", "validity", "value"]
}
