{
  "version": 3,
  "sources": ["../../../../../exports/mixins/custom-states-mixin.js"],
  "sourcesContent": ["/**\n * @template {{ new (...args: any[]): HTMLElement }} T\n * @typedef {InstanceType<T> & { internals: ElementInternals }} WithElementInternals\n */\n\n/**\n * A mixin for using custom states without calling `this.internals.add()`\n * @template {{ new (...args: any[]): HTMLElement }} T\n * @param {T} superclass\n */\nexport function CustomStatesMixin(superclass) {\n  return (\n    class extends superclass {\n      /**\n       * @param {string} state\n       */\n      addCustomState (state) {\n        try {\n          /** @type {WithElementInternals<T>} */ (this).internals.states.add(state)\n        } catch (_) {\n          // Without this, test suite errors.\n        } finally {\n          this.setAttribute(`data-${state}`, \"\")\n        }\n      }\n\n      /**\n       * @param {string} state\n       */\n      deleteCustomState (state) {\n        try {\n          /** @type {WithElementInternals<T>} */ (this).internals.states.delete(state)\n        } catch (_) {\n          // Without this, test suite errors.\n        } finally {\n          this.removeAttribute(`data-${state}`)\n        }\n      }\n\n      /**\n       * @param {string} state\n       * @param {boolean} bool\n       */\n      toggleCustomState (state, bool) {\n        if (bool) {\n          this.addCustomState(state)\n          return\n        }\n\n        if (!bool) {\n          this.deleteCustomState(state)\n          return\n        }\n\n        this.toggleCustomState(state, !this.hasCustomState(state))\n      }\n\n      /**\n       * @param {string} state\n       * @returns {boolean}\n       */\n      hasCustomState (state) {\n        try {\n          /** @type {WithElementInternals<T>} */ (this).internals.states.has(state)\n        } catch (_) {\n          // Without this, test suite errors.\n        } finally {\n          return this.hasAttribute(`data-${state}`)\n        }\n      }\n    }\n  )\n}\n\n"],
  "mappings": "AAUO,SAASA,EAAkBC,EAAY,CAC5C,OACE,cAAcA,CAAW,CAIvB,eAAgBC,EAAO,CACrB,GAAI,CACsC,KAAM,UAAU,OAAO,IAAIA,CAAK,CAC1E,MAAY,CAEZ,QAAE,CACA,KAAK,aAAa,QAAQA,CAAK,GAAI,EAAE,CACvC,CACF,CAKA,kBAAmBA,EAAO,CACxB,GAAI,CACsC,KAAM,UAAU,OAAO,OAAOA,CAAK,CAC7E,MAAY,CAEZ,QAAE,CACA,KAAK,gBAAgB,QAAQA,CAAK,EAAE,CACtC,CACF,CAMA,kBAAmBA,EAAOC,EAAM,CAC9B,GAAIA,EAAM,CACR,KAAK,eAAeD,CAAK,EACzB,MACF,CAEA,GAAI,CAACC,EAAM,CACT,KAAK,kBAAkBD,CAAK,EAC5B,MACF,CAEA,KAAK,kBAAkBA,EAAO,CAAC,KAAK,eAAeA,CAAK,CAAC,CAC3D,CAMA,eAAgBA,EAAO,CACrB,GAAI,CACsC,KAAM,UAAU,OAAO,IAAIA,CAAK,CAC1E,MAAY,CAEZ,QAAE,CACA,OAAO,KAAK,aAAa,QAAQA,CAAK,EAAE,CAC1C,CACF,CACF,CAEJ",
  "names": ["CustomStatesMixin", "superclass", "state", "bool"]
}
