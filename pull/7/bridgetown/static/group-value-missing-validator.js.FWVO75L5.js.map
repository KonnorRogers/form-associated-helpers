{
  "version": 3,
  "sources": ["../../../../internal/uuid-v4.js", "../../../../exports/validators/group-value-missing-validator.js"],
  "sourcesContent": ["/** uuid generator\n * @returns {string}\n */\nexport function uuidv4() {\n  const crypto = window.crypto;\n  // @ts-expect-error\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16),\n  );\n}\n", "import { uuidv4 } from '../../internal/uuid-v4.js'\n\n/**\n * @template {HTMLElement & { required?: boolean, form: HTMLFormElement, name?: string }} [T=HTMLElement & { required?: boolean, form: HTMLFormElement, name?: string }]\n * @returns {import(\"../types.js\").Validator<T>}\n * @example Creating a validator for a radio form associated element.\n *   class MyEl {\n *     static validators = [\n *        GroupValueMissingValidator()\n *     ]\n *   }\n */\nexport const GroupValueMissingValidator = () => {\n  /**\n   * @type {ReturnType<GroupValueMissingValidator>}\n   */\n  const obj = {\n    observedAttributes: [\"required\", \"name\"],\n    /**\n     * Only radios currently conform to the `\"GroupValueMissingValidator\", `\n     */\n    message: Object.assign(document.createElement(\"input\"), {\n      type: \"radio\",\n      required: true,\n      name: `unguessable-name-${uuidv4()}`\n    }).validationMessage,\n    checkValidity (element) {\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      const isRequired = element.required ?? element.hasAttribute(\"required\")\n\n      // Always true if the element isn't required.\n      if (!isRequired) {\n        return validity\n      }\n\n      const form = element.form\n\n      if (!form || !element.name) {\n        if (!element.value) {\n          validity.message = (typeof obj.message === \"function\" ? obj.message(element) : obj.message) || \"\"\n          validity.isValid = false\n          validity.invalidKeys.push(\"valueMissing\")\n        }\n        return validity\n      }\n\n      const formData = new FormData(form)\n\n      if (formData.getAll(element.name).length < 1) {\n        validity.message = (typeof obj.message === \"function\" ? obj.message(element) : obj.message) || \"\"\n        validity.isValid = false\n        validity.invalidKeys.push(\"valueMissing\")\n      }\n\n      return validity\n    }\n  }\n\n  return obj\n}\n"],
  "mappings": "mFAGO,SAASA,GAAS,CACvB,IAAMC,EAAS,OAAO,OAEtB,OAAQ,CAAC,GAAG,EAAI,KAAO,KAAO,KAAO,OAAO,QAAQ,SAAWC,IAE3DA,EACCD,EAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,EAAK,IAAOC,EAAI,GAC5D,SAAS,EAAE,CACf,CACF,CCAO,IAAMC,EAA6B,IAAM,CAI9C,IAAMC,EAAM,CACV,mBAAoB,CAAC,WAAY,MAAM,EAIvC,QAAS,OAAO,OAAO,SAAS,cAAc,OAAO,EAAG,CACtD,KAAM,QACN,SAAU,GACV,KAAM,oBAAoBC,EAAO,CAAC,EACpC,CAAC,EAAE,kBACH,cAAeC,EAAS,CAItB,IAAMC,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAKA,GAAI,EAHeD,EAAQ,UAAYA,EAAQ,aAAa,UAAU,GAIpE,OAAOC,EAGT,IAAMC,EAAOF,EAAQ,KAErB,MAAI,CAACE,GAAQ,CAACF,EAAQ,MACfA,EAAQ,QACXC,EAAS,SAAW,OAAOH,EAAI,SAAY,WAAaA,EAAI,QAAQE,CAAO,EAAIF,EAAI,UAAY,GAC/FG,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,cAAc,GAEnCA,IAGQ,IAAI,SAASC,CAAI,EAErB,OAAOF,EAAQ,IAAI,EAAE,OAAS,IACzCC,EAAS,SAAW,OAAOH,EAAI,SAAY,WAAaA,EAAI,QAAQE,CAAO,EAAIF,EAAI,UAAY,GAC/FG,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,cAAc,GAGnCA,EACT,CACF,EAEA,OAAOH,CACT",
  "names": ["uuidv4", "crypto", "c", "GroupValueMissingValidator", "obj", "uuidv4", "element", "validity", "form"]
}
