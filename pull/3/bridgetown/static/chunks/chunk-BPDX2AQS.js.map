{
  "version": 3,
  "sources": ["../../../../../exports/mixins/form-associated-mixin.js"],
  "sourcesContent": ["/**\n * Global type to add ElementInternals.states\n * Can go away when TS ships proper support.\n * @type {import(\"../../types/index.d.ts\")}\n */\n\n/**\n * A mixin to call `attachInternals()`\n * This is merely an implementation that sets the `formAssociated` static class property and calls `attachInternals()`. It doesn't do anything else. It is intentionally minimal.\n *\n * @see https://webkit.org/blog/13711/elementinternals-and-form-associated-custom-elements/\n * @template {import(\"./types.js\").GConstructable<HTMLElement> & {observedAttributes?: string[]}} T\n * @param {T} superclass\n */\nexport function FormAssociatedMixin(superclass) {\n  return (\n    /**\n     */\n    class extends superclass {\n      static formAssociated = true\n\n      /**\n      * @param {...any} args\n      */\n      constructor(...args) {\n        super(...args)\n\n        /**\n        * We dont make it private like #internals because then its not available in the mixin.\n        * @type {ReturnType<HTMLElement[\"attachInternals\"]>}\n        */\n        this.internals = this.attachInternals()\n      }\n    }\n  )\n}\n"],
  "mappings": "+FAcO,SAASA,EAAoBC,EAAY,CAdhD,IAAAC,EAeE,OAGEA,EAAA,cAAcD,CAAW,CAMvB,eAAeE,EAAM,CACnB,MAAM,GAAGA,CAAI,EAMb,KAAK,UAAY,KAAK,gBAAgB,CACxC,CACF,EAdEC,EADFF,EACS,iBAAiB,IAD1BA,CAiBJ",
  "names": ["FormAssociatedMixin", "superclass", "_a", "args", "__publicField"]
}
