{
  "version": 3,
  "sources": ["../../../../exports/validators/range-underflow-validator.js"],
  "sourcesContent": ["/**\n * @type {() => import(\"../types.js\").Validator<HTMLElement & {min?: number}> & { message: (element: HTMLElement, min: number) => string }}\n */\nexport const RangeUnderflowValidator = () => {\n  /**\n   * @type {ReturnType<RangeUnderflowValidator>}\n   */\n  const obj = {\n    observedAttributes: [\"min\"],\n    message (_element, min) {\n      return `Please select a value that is more than or equal to ${min}.`\n    },\n    checkValidity(element) {\n      const min = Number(element.min ?? element.getAttribute(\"min\"))\n      const value = element.value\n\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      if (typeof value !== \"number\") return validity\n\n      if (value < min) {\n        validity.message = (typeof obj.message === \"function\" ? obj.message(element, min) : obj.message) || \"\"\n        validity.isValid = false\n        validity.invalidKeys.push(\"rangeUnderflow\")\n      }\n\n      return validity\n    }\n  }\n\n  return obj\n}\n"],
  "mappings": "mFAGO,IAAMA,EAA0B,IAAM,CAI3C,IAAMC,EAAM,CACV,mBAAoB,CAAC,KAAK,EAC1B,QAASC,EAAUC,EAAK,CACtB,MAAO,uDAAuDA,CAAG,GACnE,EACA,cAAcC,EAAS,CACrB,IAAMD,EAAM,OAAOC,EAAQ,KAAOA,EAAQ,aAAa,KAAK,CAAC,EACvDC,EAAQD,EAAQ,MAKhBE,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAEA,OAAI,OAAOD,GAAU,UAEjBA,EAAQF,IACVG,EAAS,SAAW,OAAOL,EAAI,SAAY,WAAaA,EAAI,QAAQG,EAASD,CAAG,EAAIF,EAAI,UAAY,GACpGK,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,gBAAgB,GAGrCA,CACT,CACF,EAEA,OAAOL,CACT",
  "names": ["RangeUnderflowValidator", "obj", "_element", "min", "element", "value", "validity"]
}
