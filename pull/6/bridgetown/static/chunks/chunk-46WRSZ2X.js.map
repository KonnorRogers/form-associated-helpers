{
  "version": 3,
  "sources": ["../../../../../exports/validators/mirror-validator.js"],
  "sourcesContent": ["/**\n * This validator is for if you have an exact copy of your element in the shadow DOM. Rather than needing\n *   custom translations and error messages, you can simply rely on the element \"formControl\" in your shadow dom.\n * @type {() => import(\"../types.js\").Validator<HTMLElement & { formControl?: HTMLElement & ElementInternals }>}\n */\nexport const MirrorValidator = () => {\n  return {\n    checkValidity (element) {\n      const formControl = element.formControl\n\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      if (!formControl) return validity\n\n      const isValid = formControl.checkValidity()\n      if (isValid) return validity\n\n      validity.isValid = false\n      validity.message = formControl.validationMessage\n      for (let key in formControl.validity) {\n        if (key === \"valid\") {\n          continue\n        }\n\n        const checkedKey = /** @type {Exclude<keyof ValidityState, \"valid\">} */ (/** @type {unknown} */ (key))\n\n        if (formControl.validity[checkedKey] === true) {\n          validity.invalidKeys.push(checkedKey)\n        }\n      }\n\n      return validity\n    }\n  }\n}\n"],
  "mappings": "AAKO,IAAMA,EAAkB,KACtB,CACL,cAAeC,EAAS,CACtB,IAAMC,EAAcD,EAAQ,YAKtBE,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAKA,GAHI,CAACD,GAEWA,EAAY,cAAc,EAC7B,OAAOC,EAEpBA,EAAS,QAAU,GACnBA,EAAS,QAAUD,EAAY,kBAC/B,QAASE,KAAOF,EAAY,SAAU,CACpC,GAAIE,IAAQ,QACV,SAGF,IAAMC,EAA2FD,EAE7FF,EAAY,SAASG,CAAU,IAAM,IACvCF,EAAS,YAAY,KAAKE,CAAU,CAExC,CAEA,OAAOF,CACT,CACF",
  "names": ["MirrorValidator", "element", "formControl", "validity", "key", "checkedKey"]
}
