{
  "version": 3,
  "sources": ["../../../../exports/validators/step-mismatch-validator.js"],
  "sourcesContent": ["// @ts-check\n\n/**\n * @param {number} min\n * @param {number} value\n * @param {number} step\n * @return {boolean}\n */\nfunction isValidStep (min, value, step) {\n  return (value - min) % step === 0\n}\n\n/**\n * @param {number} min\n * @param {number} value\n * @param {number} step\n * @returns {{ high: number, low: number }}\n */\nfunction findClosestSteps (min, value, step) {\n  const high = value + ((value - min) % step)\n  const low = high - step\n\n  return { high, low }\n}\n\n/**\n * @param {any} maybeNum\n */\nfunction toNumberOrNull (maybeNum) {\n  try {\n    return Number(maybeNum)\n  } catch (_e) {\n    return null\n  }\n}\n\n/**\n * @typedef {HTMLElement & { min?: number, step?: number, value?: null | string | File | FormData }} RangeElement\n */\n\n/**\n * @template {RangeElement} [T=RangeElement]\n * @type {() => import(\"../types.js\").Validator<T> }}\n */\nexport const StepMismatchValidator = () => {\n  /**\n   * @type {ReturnType<StepMismatchValidator<T>>}\n   */\n  const obj = {\n    observedAttributes: [\"min\", \"step\"],\n    /**\n     * @param {T} element\n     */\n    message (element) {\n      // Don't need min here.\n      // const min = Number(element.min ?? element.getAttribute(\"min\"))\n      const value = toNumberOrNull(element.value)\n      const step = toNumberOrNull(element.step ?? element.getAttribute(\"step\"))\n\n      const badInput = Object.assign(document.createElement(\"input\"), {\n        type: \"number\",\n        // min,\n        value,\n        step,\n      })\n\n      return badInput.validationMessage\n    },\n    checkValidity (element) {\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      const min = toNumberOrNull(element.min ?? element.getAttribute(\"min\"))\n      const value = toNumberOrNull(element.value)\n      const step = toNumberOrNull(element.step ?? element.getAttribute(\"step\"))\n\n      if (min == null || value == null || step == null) {\n        return validity\n      }\n\n      if (isNaN(min) || isNaN(value) || isNaN(step)) {\n        return validity\n      }\n\n      const isValid = isValidStep(min, value, step)\n\n      if (isValid) return validity\n\n      const {low, high} = findClosestSteps(min, value, step)\n\n      validity.message = (typeof obj.message === \"function\" ? obj.message(element, { low, high }) : obj.message) || \"\"\n      validity.isValid = false\n      validity.invalidKeys.push(\"stepMismatch\")\n\n      return validity\n    }\n  }\n\n  return obj\n}\n"],
  "mappings": "mFAQA,SAASA,EAAaC,EAAKC,EAAOC,EAAM,CACtC,OAAQD,EAAQD,GAAOE,IAAS,CAClC,CAQA,SAASC,EAAkBH,EAAKC,EAAOC,EAAM,CAC3C,IAAME,EAAOH,GAAUA,EAAQD,GAAOE,EAChCG,EAAMD,EAAOF,EAEnB,MAAO,CAAE,KAAAE,EAAM,IAAAC,CAAI,CACrB,CAKA,SAASC,EAAgBC,EAAU,CACjC,GAAI,CACF,OAAO,OAAOA,CAAQ,CACxB,MAAa,CACX,OAAO,IACT,CACF,CAUO,IAAMC,EAAwB,IAAM,CAIzC,IAAMC,EAAM,CACV,mBAAoB,CAAC,MAAO,MAAM,EAIlC,QAASC,EAAS,CAGhB,IAAMT,EAAQK,EAAeI,EAAQ,KAAK,EACpCR,EAAOI,EAAeI,EAAQ,MAAQA,EAAQ,aAAa,MAAM,CAAC,EASxE,OAPiB,OAAO,OAAO,SAAS,cAAc,OAAO,EAAG,CAC9D,KAAM,SAEN,MAAAT,EACA,KAAAC,CACF,CAAC,EAEe,iBAClB,EACA,cAAeQ,EAAS,CAItB,IAAMC,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAEMX,EAAMM,EAAeI,EAAQ,KAAOA,EAAQ,aAAa,KAAK,CAAC,EAC/DT,EAAQK,EAAeI,EAAQ,KAAK,EACpCR,EAAOI,EAAeI,EAAQ,MAAQA,EAAQ,aAAa,MAAM,CAAC,EAYxE,GAVIV,GAAO,MAAQC,GAAS,MAAQC,GAAQ,MAIxC,MAAMF,CAAG,GAAK,MAAMC,CAAK,GAAK,MAAMC,CAAI,GAI5BH,EAAYC,EAAKC,EAAOC,CAAI,EAE/B,OAAOS,EAEpB,GAAM,CAAC,IAAAN,EAAK,KAAAD,CAAI,EAAID,EAAiBH,EAAKC,EAAOC,CAAI,EAErD,OAAAS,EAAS,SAAW,OAAOF,EAAI,SAAY,WAAaA,EAAI,QAAQC,EAAS,CAAE,IAAAL,EAAK,KAAAD,CAAK,CAAC,EAAIK,EAAI,UAAY,GAC9GE,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,cAAc,EAEjCA,CACT,CACF,EAEA,OAAOF,CACT",
  "names": ["isValidStep", "min", "value", "step", "findClosestSteps", "high", "low", "toNumberOrNull", "maybeNum", "StepMismatchValidator", "obj", "element", "validity"]
}
