{
  "version": 3,
  "sources": ["../../../../exports/validators/range-underflow-validator.js"],
  "sourcesContent": ["// @ts-check\n\n\n/**\n * @template {HTMLElement & { min?: number, value: null | string | File | FormData }} T\n * @type {() => import(\"../types.js\").Validator<T> }}\n */\nexport const RangeUnderflowValidator = () => {\n  /**\n   * @type {ReturnType<RangeUnderflowValidator<T>>}\n   */\n  const obj = {\n    observedAttributes: [\"min\"],\n    message (hostElement) {\n      const badInput = Object.assign(document.createElement(\"input\"), {\n        type: \"number\",\n        min: hostElement.min ?? Number(hostElement.getAttribute(\"min\")),\n        value: hostElement.value\n      })\n\n      return badInput.validationMessage\n    },\n    checkValidity (element) {\n      /**\n      * @type {ReturnType<import(\"../types.js\").Validator[\"checkValidity\"]>}\n      */\n      const validity = {\n        message: \"\",\n        isValid: true,\n        invalidKeys: []\n      }\n\n      const min = Number(element.min ?? element.getAttribute(\"min\"))\n      const value = Number(element.value)\n\n      // If it's not a number, we can't compare.\n      if (isNaN(value) || typeof value !== \"number\") return validity\n\n      if (value < min) {\n        validity.message = (typeof obj.message === \"function\" ? obj.message(element) : obj.message) || \"\"\n        validity.isValid = false\n        validity.invalidKeys.push(\"rangeOverflow\")\n      }\n\n      return validity\n    }\n  }\n\n  return obj\n}\n"],
  "mappings": "mFAOO,IAAMA,EAA0B,IAAM,CAI3C,IAAMC,EAAM,CACV,mBAAoB,CAAC,KAAK,EAC1B,QAASC,EAAa,CAOpB,OANiB,OAAO,OAAO,SAAS,cAAc,OAAO,EAAG,CAC9D,KAAM,SACN,IAAKA,EAAY,KAAO,OAAOA,EAAY,aAAa,KAAK,CAAC,EAC9D,MAAOA,EAAY,KACrB,CAAC,EAEe,iBAClB,EACA,cAAeC,EAAS,CAItB,IAAMC,EAAW,CACf,QAAS,GACT,QAAS,GACT,YAAa,CAAC,CAChB,EAEMC,EAAM,OAAOF,EAAQ,KAAOA,EAAQ,aAAa,KAAK,CAAC,EACvDG,EAAQ,OAAOH,EAAQ,KAAK,EAGlC,OAAI,MAAMG,CAAK,GAAK,OAAOA,GAAU,UAEjCA,EAAQD,IACVD,EAAS,SAAW,OAAOH,EAAI,SAAY,WAAaA,EAAI,QAAQE,CAAO,EAAIF,EAAI,UAAY,GAC/FG,EAAS,QAAU,GACnBA,EAAS,YAAY,KAAK,eAAe,GAGpCA,CACT,CACF,EAEA,OAAOH,CACT",
  "names": ["RangeUnderflowValidator", "obj", "hostElement", "element", "validity", "min", "value"]
}
